#!/usr/bin/env python3
"""
Migration script to help transition from development to production setup
"""

import os
import shutil
import secrets

def generate_secret_key():
    """Generate a secure secret key for production."""
    return secrets.token_hex(32)

def create_production_env():
    """Create production environment file."""
    secret_key = generate_secret_key()
    
    env_content = f"""# Production Environment Configuration
# Generated by migration script

# Spotify OAuth Configuration
REDIRECT_URI='http://127.0.0.1:8080/callback'

# Security
SECRET_KEY='{secret_key}'

# App Configuration
PORT=8080
DEBUG=False

# Optional: AI Features
GEMINI_API_KEY='{os.getenv("GEMINI_API_KEY", "")}'

# Session Configuration
SESSION_PERMANENT=False
SESSION_TYPE=filesystem
"""
    
    with open('.env.production.local', 'w') as f:
        f.write(env_content)
    
    print("‚úÖ Created .env.production.local with secure settings")
    print(f"üîë Generated secret key: {secret_key[:16]}...")

def backup_current_setup():
    """Backup current development setup."""
    backup_dir = "backup_development"
    
    if not os.path.exists(backup_dir):
        os.makedirs(backup_dir)
    
    # Backup current files
    files_to_backup = [
        'app.py',
        'callback_server.py',
        '.env'
    ]
    
    for file in files_to_backup:
        if os.path.exists(file):
            shutil.copy2(file, os.path.join(backup_dir, file))
            print(f"üìÅ Backed up {file}")

def show_migration_steps():
    """Show steps to complete migration."""
    print("\nüöÄ Migration Steps:")
    print("1. ‚úÖ Backup created in 'backup_development/' folder")
    print("2. ‚úÖ Production environment created as '.env.production.local'")
    print("\nüìã Next Steps:")
    print("3. Update your Spotify app redirect URI to: http://127.0.0.1:8080/callback")
    print("4. Copy .env.production.local to .env (or rename it)")
    print("5. Test with: python app_production.py")
    print("6. For actual production, update REDIRECT_URI to your domain")
    print("\n‚ö†Ô∏è  Remember to:")
    print("   - Stop the current app.py and callback_server.py")
    print("   - Update Spotify Developer Dashboard settings")
    print("   - Test the new single-app setup")

def main():
    """Run migration process."""
    print("üîÑ Starting migration to production setup...")
    
    # Create backup
    backup_current_setup()
    
    # Create production environment
    create_production_env()
    
    # Show next steps
    show_migration_steps()
    
    print("\n‚úÖ Migration preparation complete!")
    print("üìñ See PRODUCTION_DEPLOYMENT.md for full deployment guide")

if __name__ == "__main__":
    main()
